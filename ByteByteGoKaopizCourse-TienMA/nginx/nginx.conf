events {
    worker_connections 1024;
}

http {
    # MIME types mapping
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Định nghĩa upstream backend servers
    upstream fastapi_backend {
        # Các thuật toán load balancing có thể sử dụng:
        # - round_robin (mặc định - không cần khai báo)
        # - least_conn
        # - ip_hash
        # - weighted round_robin
        
        # Sử dụng thuật toán Weighted Round Robin
        # Server 1: weight=3 (nhận 3/6 = 50% requests)
        # Server 2: weight=2 (nhận 2/6 = 33% requests)  
        # Server 3: weight=1 (nhận 1/6 = 17% requests)
        
        server fastapi_server_1:8000 weight=1 max_fails=3 fail_timeout=30s;
        server fastapi_server_2:8000 weight=1 max_fails=3 fail_timeout=30s;
        server fastapi_server_3:8000 weight=1 max_fails=3 fail_timeout=30s;
    }

    # Cấu hình server
    server { 
        listen 80;
        server_name localhost;

        # Logging
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Health check endpoint cho Nginx
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Serve static frontend files
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # Cache CSS files with proper content type
            location ~* \.css$ {
                expires 5m;
                add_header Cache-Control "public, max-age=300";
                add_header Content-Type "text/css; charset=utf-8";
            }
            
            # Cache JS files
            location ~* \.js$ {
                expires 5m;
                add_header Cache-Control "public, max-age=300";
                add_header Content-Type "application/javascript; charset=utf-8";
            }
            
            # Cache images and fonts for longer
            location ~* \.(ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
                expires 1d;
                add_header Cache-Control "public, max-age=86400";
            }
        }

        # API routes - proxy to backend
        location /api/ {
            proxy_pass http://fastapi_backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Retry logic
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Health check endpoint - proxy to backend
        location /health {
            proxy_pass http://fastapi_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Status page để monitor
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;  # Docker networks
            deny all;
        }
    }
} 